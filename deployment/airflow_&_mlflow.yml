# Contenedor para administrar flujos automatizados
version: '3.8'

services:

  # Airflow: Scheduler, Webserver, Worker
  airflow:
    image: apache/airflow:2.9.1
    container_name: airflow
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=sqlite:////opt/airflow/airflow.db
      - AIRFLOW__CORE__FERNET_KEY=airflowfernetkey0000000000000000
      - AIRFLOW__WEBSERVER__SECRET_KEY=airflowwebsecretkey000000000000
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    volumes:
      - airflow_data:/opt/airflow
      - /lago_de_datos:/lago_de_datos
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com &&
        airflow webserver & airflow scheduler
      "

  # MLflow
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.13.0
    container_name: mlflow
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - mlruns:/mlflow/mlruns
      - /lago_de_datos:/lago_de_datos
    command: >
      mlflow server
      --backend-store-uri sqlite:///mlflow.db
      --default-artifact-root /lago_de_datos/mlflow_artifacts
      --host 0.0.0.0
      --port 5000
    working_dir: /mlflow

volumes:
  airflow_data:
  mlruns:
